// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/IAlertAct/GetActionDefinitions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for action definitions based on a query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Action Definitions"
                ],
                "summary": "Search Action Definitions",
                "parameters": [
                    {
                        "description": "Action Definitions Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ActionDefinitionsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api_davudpasha.ActionDefinitionsSearchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/IAssetAct/GetAllAsset2": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve assets that match a search filter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Search Assets",
                "parameters": [
                    {
                        "description": "Assets Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.AssetsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.AssetsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemManagerCorrelationAct/GetCorrelationList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for alerts based on a query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert Definitions"
                ],
                "summary": "Search Alert Definitions",
                "parameters": [
                    {
                        "description": "Alert Definitions Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.AlertDefinitionsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.AlertDefinitionsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemManagerElasticIndexListAct/GetElasticStats": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for Elastic Stats based on a query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elastic Stats"
                ],
                "summary": "Search Elastic Stats",
                "parameters": [
                    {
                        "description": "Elastic Stats Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ElasticStatsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ElasticStatsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemManagerGeolocationAct/GetGeolocations": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for Geo Locations based on a query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Geo Locations"
                ],
                "summary": "Search Geo Locations",
                "parameters": [
                    {
                        "description": "Geo Locations Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.GeoLocationsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.GeoLocationsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemManagerLogSourceAct/GetLogSourceList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves sources that match a search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sources"
                ],
                "summary": "Search Sources",
                "parameters": [
                    {
                        "description": "Sources Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SourcesSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SourcesSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemManagerLogSourceDefAct/GetLogSourceDefDataList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves source types that match a search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Source Types"
                ],
                "summary": "Search Source Types",
                "parameters": [
                    {
                        "description": "Source Types Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SourceTypesSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SourceTypesSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemManagerSearchArchiveAct/GetSearchArchivesAndStatus": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve search archives based on a filter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search Archives"
                ],
                "summary": "Retrieve Search Archives",
                "parameters": [
                    {
                        "description": "Search Archives Get Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SearchArchivesGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SearchArchivesGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemQueryAct/GetList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for Queries based on a filter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queries"
                ],
                "summary": "Search Queries",
                "parameters": [
                    {
                        "description": "Queries Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.QueriesSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.QueriesSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICSiemQueryAct/Save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Save Queries based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queries"
                ],
                "summary": "Save Queries",
                "parameters": [
                    {
                        "description": "Queries Save Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.QueriesSaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.QueriesSaveResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICaseManagerAct/GetCaseGridPageData": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for cases based on a filter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Search Cases",
                "parameters": [
                    {
                        "description": "Cases Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.CasesSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.CasesSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICsiemManagerClassificationAct/GetList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for classifications based on a query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classifications"
                ],
                "summary": "Search Classifications",
                "parameters": [
                    {
                        "description": "Classifications Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ClassificationsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ClassificationsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ICsiemManagerTagAct/GetTagListByCategory": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves tags that match a search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Search Tags",
                "parameters": [
                    {
                        "description": "Tags Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.TagsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.TagsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/IDPReportScheduleAct/GetListWithSchedule": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for Reports based on a filter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Search Reports",
                "parameters": [
                    {
                        "description": "Reports Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ReportsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api_davudpasha.ReportsItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/IDPReportScheduleAct/Save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Save Source Types based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Source Types"
                ],
                "summary": "Save Source Types",
                "parameters": [
                    {
                        "description": "Source Types Save Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SourceTypesSaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ILookupAct/GetLookupListWithDetails": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for Lookups based on a query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lookups"
                ],
                "summary": "Search Lookups",
                "parameters": [
                    {
                        "description": "Lookups Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.LookupsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api_davudpasha.LookupsSearchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ISearchAct/Execute": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search for events based on a query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Search Events",
                "parameters": [
                    {
                        "description": "Events Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.EventsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.EventsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ISystemLogAct/Get": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves system logs that match a search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Logs"
                ],
                "summary": "Search System Logs",
                "parameters": [
                    {
                        "description": "System Logs Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SystemLogsSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.SystemLogsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ITaskManagerAct/GetList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves tasks that match a search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Search Tasks",
                "parameters": [
                    {
                        "description": "Tasks Search Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.TasksSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api_davudpasha.TasksSearchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api_davudpasha.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api_davudpasha.Action": {
            "type": "object",
            "properties": {
                "ActionParameters": {
                    "description": "Parameters of the action.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.ActionParameter"
                    }
                },
                "ActionRefId": {
                    "description": "Reference ID for the action.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ActionType": {
                    "description": "Type of the action.",
                    "type": "string"
                },
                "Data": {
                    "description": "Data associated with the action.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ActionDefinitionsSearchRequest": {
            "type": "object",
            "properties": {
                "application": {
                    "description": "Specifies the application for which the action definitions are being searched.",
                    "type": "string"
                },
                "searchFilter": {
                    "description": "Filter for searching action definitions.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ActionDefinitionsSearchResponse": {
            "type": "object",
            "properties": {
                "Action": {
                    "description": "Contains the details of the action.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.Action"
                        }
                    ]
                },
                "ActionDefinitionId": {
                    "description": "Unique identifier for the action definition.",
                    "type": "string"
                },
                "Application": {
                    "description": "Specifies the application to which the action definition belongs.",
                    "type": "string"
                },
                "Author": {
                    "description": "The author of the action definition.",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the action definition, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "IsPublic": {
                    "description": "Indicates whether the action definition is public.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "Name of the action definition.",
                    "type": "string"
                },
                "Type": {
                    "description": "Type of the action definition.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ActionParameter": {
            "type": "object",
            "properties": {
                "Key": {
                    "description": "Key of the action parameter.",
                    "type": "string"
                },
                "Value": {
                    "description": "Value of the action parameter.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.Optional"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.Actions": {
            "type": "object",
            "properties": {
                "ActionRefIds": {
                    "description": "List of action reference IDs.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Actions": {
                    "description": "List of actions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.Action"
                    }
                }
            }
        },
        "api_davudpasha.AlertDefinitionsCorrelationData": {
            "type": "object",
            "properties": {
                "Actions": {
                    "description": "Actions related to the correlation.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.Actions"
                        }
                    ]
                },
                "CorrelationType": {
                    "description": "Type of correlation.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.AlertDefinitionsCorrelationType"
                        }
                    ]
                },
                "Data": {
                    "description": "Raw data in JSON format.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.AlertDefinitionsQueryData"
                        }
                    ]
                },
                "Description": {
                    "description": "Description of the correlation.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Enabled": {
                    "description": "Whether the correlation is enabled.",
                    "type": "boolean"
                },
                "FromMarket": {
                    "description": "Whether the correlation is from the market.",
                    "type": "boolean"
                },
                "FromModules": {
                    "description": "Whether the correlation is from modules.",
                    "type": "boolean"
                },
                "GroupedColumns": {
                    "description": "Columns grouped by the correlation.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "GroupedColumnsOptions": {
                    "description": "Options for columns that can be grouped.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SelectedColumn"
                    }
                },
                "HasUpdate": {
                    "description": "Whether the correlation has an update.",
                    "type": "boolean"
                },
                "Id": {
                    "description": "ID of the alert correlation.",
                    "type": "string"
                },
                "LimiterColumns": {
                    "description": "Columns used for limiting.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "LimiterTimeFrameType": {
                    "description": "Time frame type for limiter.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "LimiterTimeFrameValue": {
                    "description": "Time frame value for limiter.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableInt64"
                        }
                    ]
                },
                "MaxAlertCount": {
                    "description": "Maximum alert count.",
                    "type": "integer"
                },
                "MaxSendCount": {
                    "description": "Maximum send count.",
                    "type": "integer"
                },
                "Message": {
                    "description": "Message of the correlation.",
                    "type": "string"
                },
                "ModuleGuid": {
                    "description": "GUID of the module.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ModuleId": {
                    "description": "ID of the module.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Name": {
                    "description": "Name of the correlation.",
                    "type": "string"
                },
                "RiskLevel": {
                    "description": "Risk level of the correlation.",
                    "type": "integer"
                },
                "Tags": {
                    "description": "Tags associated with the correlation.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Version": {
                    "description": "Version of the correlation.",
                    "type": "number"
                }
            }
        },
        "api_davudpasha.AlertDefinitionsCorrelationType": {
            "type": "string",
            "enum": [
                "Interface IQueryCorrelation",
                "Interface IQueryCorrelationChain",
                "Interface ILogSourceCorrelation"
            ],
            "x-enum-varnames": [
                "CORRELATIONTYPE_INTERFACEIQUERYCORRELATION",
                "CORRELATIONTYPE_INTERFACEIQUERYCORRELATIONCHAIN",
                "CORRELATIONTYPE_INTERFACEILOGSOURCECORRELATION"
            ]
        },
        "api_davudpasha.AlertDefinitionsItem": {
            "type": "object",
            "properties": {
                "ActionMessage": {
                    "description": "Message for the required action.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ActionRequired": {
                    "description": "Indicates if action is required.",
                    "type": "boolean"
                },
                "CorrelationData": {
                    "description": "Correlation data.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.AlertDefinitionsCorrelationData"
                        }
                    ]
                },
                "LgsName": {
                    "description": "LGS name.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.AlertDefinitionsQuery": {
            "type": "object",
            "properties": {
                "Query": {
                    "type": "string"
                },
                "QueryColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SelectedColumn"
                    }
                },
                "QueryID": {
                    "type": "string"
                },
                "TimeFrameType": {
                    "type": "string"
                },
                "TimeFrameValue": {
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.AlertDefinitionsQueryCorrelationAlertType": {
            "type": "string",
            "enum": [
                "WhenOneOrMoreRow",
                "WhenNoRow",
                "AlertForEachRow"
            ],
            "x-enum-varnames": [
                "QUERYCORRELATIONALERTTYPE_WHENONEORMOREROW",
                "QUERYCORRELATIONALERTTYPE_WHENNOROW",
                "QUERYCORRELATIONALERTTYPE_ALERTFOREACHROW"
            ]
        },
        "api_davudpasha.AlertDefinitionsQueryData": {
            "type": "object",
            "properties": {
                "LastReadTime": {
                    "type": "string"
                },
                "LgsID": {
                    "type": "string"
                },
                "Queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.AlertDefinitionsQuery"
                    }
                },
                "Query": {
                    "type": "string"
                },
                "QueryCorrelationAlertType": {
                    "$ref": "#/definitions/api_davudpasha.AlertDefinitionsQueryCorrelationAlertType"
                },
                "QueryID": {
                    "type": "string"
                },
                "RuleType": {
                    "$ref": "#/definitions/api_davudpasha.AlertDefinitionsRuleType"
                },
                "TimeFrameType": {
                    "$ref": "#/definitions/api_davudpasha.AlertDefinitionsTimeFrameType"
                },
                "TimeFrameValue": {
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.AlertDefinitionsRuleType": {
            "type": "string",
            "enum": [
                "any"
            ],
            "x-enum-varnames": [
                "RULETYPE_ANY"
            ]
        },
        "api_davudpasha.AlertDefinitionsSaveRequest": {
            "type": "object",
            "properties": {
                "correlation": {
                    "$ref": "#/definitions/api_davudpasha.AlertDefinitionsCorrelationData"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.AlertDefinitionsSaveResponse": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                },
                "Status": {
                    "type": "boolean"
                },
                "ValidationList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "optErrorMsg": {
                    "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                }
            }
        },
        "api_davudpasha.AlertDefinitionsSearchRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Filter for the search request.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.AlertDefinitionsSearchResponse": {
            "type": "object",
            "properties": {
                "FailedItems": {
                    "description": "List of failed items in raw JSON format.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Items": {
                    "description": "List of alert items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.AlertDefinitionsItem"
                    }
                },
                "SuccessItems": {
                    "description": "List of successful items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SuccessItem"
                    }
                }
            }
        },
        "api_davudpasha.AlertDefinitionsTimeFrameType": {
            "type": "string",
            "enum": [
                "minutes",
                "hours",
                "days",
                "weeks"
            ],
            "x-enum-varnames": [
                "TIMEFRAMETYPE_MINUTES",
                "TIMEFRAMETYPE_HOURS",
                "TIMEFRAMETYPE_DAYS",
                "TIMEFRAMETYPE_WEEKS"
            ]
        },
        "api_davudpasha.AssetsAsset": {
            "type": "object",
            "properties": {
                "AssetId": {
                    "description": "Unique identifier for the asset.",
                    "type": "string"
                },
                "AssetType": {
                    "description": "Type of the asset.",
                    "type": "string"
                },
                "Credential": {
                    "description": "Credential information for the asset, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "CustomerId": {
                    "description": "Identifier for the customer associated with the asset.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "DistinguishedName": {
                    "description": "Distinguished name of the asset.",
                    "type": "string"
                },
                "EnterDate": {
                    "description": "Date when the asset was entered into the system.",
                    "type": "string"
                },
                "GroupId": {
                    "description": "Identifier for the group to which the asset belongs.",
                    "type": "string"
                },
                "HostName": {
                    "description": "Hostname of the asset.",
                    "type": "string"
                },
                "InventoryInfo": {
                    "description": "Inventory information for the asset.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.AssetsInventoryInfo"
                        }
                    ]
                },
                "Ip": {
                    "description": "IP address of the asset.",
                    "type": "string"
                },
                "IsDeleted": {
                    "description": "Indicates whether the asset is deleted.",
                    "type": "boolean"
                },
                "IsManage": {
                    "description": "Indicates whether the asset is manageable.",
                    "type": "boolean"
                },
                "IsManuel": {
                    "description": "Indicates whether the asset was manually added.",
                    "type": "boolean"
                },
                "IsPassive": {
                    "description": "Indicates whether the asset is passive.",
                    "type": "boolean"
                },
                "LastAccessDate": {
                    "description": "Date of the last access to the asset.",
                    "type": "string"
                },
                "LastUserOfSession": {
                    "description": "Last user who accessed the asset's session.",
                    "type": "string"
                },
                "MacAddress": {
                    "description": "MAC address of the asset.",
                    "type": "string"
                },
                "Name": {
                    "description": "Name of the asset.",
                    "type": "string"
                },
                "ObjectGUID": {
                    "description": "Unique object GUID for the asset.",
                    "type": "string"
                },
                "OsInfo": {
                    "description": "Information about the operating system of the asset.",
                    "type": "string"
                },
                "ParentGroupIds": {
                    "description": "List of parent group IDs to which the asset belongs.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Tag": {
                    "description": "List of tags associated with the asset.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TagData": {
                    "description": "Additional tag data, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "TenantID": {
                    "description": "Unique identifier for the tenant.",
                    "type": "string"
                },
                "Timestamp": {
                    "description": "Timestamp of when the asset was created or last updated.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "_id": {
                    "description": "Unique identifier for the asset.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.AssetsInventoryInfo": {
            "type": "object",
            "properties": {
                "OperationSystemInfos": {
                    "description": "Information about the operating system of the asset.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.AssetsOperationSystemInfo"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.AssetsOperationSystemInfo": {
            "type": "object",
            "properties": {
                "BuildNumber": {
                    "description": "Build number of the operating system.",
                    "type": "string"
                },
                "Caption": {
                    "description": "Caption or name of the operating system.",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the operating system.",
                    "type": "string"
                },
                "Manufacturer": {
                    "description": "Manufacturer of the operating system.",
                    "type": "string"
                },
                "OSArchitecture": {
                    "description": "Architecture of the operating system (e.g., 32-bit, 64-bit).",
                    "type": "string"
                },
                "SerialNumber": {
                    "description": "Serial number of the operating system.",
                    "type": "string"
                },
                "ServisPack": {
                    "description": "Service pack version of the operating system.",
                    "type": "string"
                },
                "Version": {
                    "description": "Version of the operating system.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.AssetsSearchRequest": {
            "type": "object",
            "properties": {
                "pageNumber": {
                    "description": "Page number for pagination.",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "Number of items per page for pagination.",
                    "type": "integer"
                },
                "searchFilter": {
                    "description": "Primary filter for searching assets.",
                    "type": "string"
                },
                "searchFilter2": {
                    "description": "Secondary filter for searching assets.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.AssetsSearchResponse": {
            "type": "object",
            "properties": {
                "assets": {
                    "description": "List of assets matching the search criteria.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.AssetsAsset"
                    }
                },
                "count": {
                    "description": "Total count of assets matching the search criteria.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.CasesComment": {
            "type": "object",
            "properties": {
                "DetailID": {
                    "description": "Unique identifier for the comment detail.",
                    "type": "string"
                },
                "Files": {
                    "description": "List of files associated with the comment, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Message": {
                    "description": "Content of the comment.",
                    "type": "string"
                },
                "Source": {
                    "description": "Source of the comment.",
                    "type": "string"
                },
                "Time": {
                    "description": "Timestamp of when the comment was made.",
                    "type": "string"
                },
                "Type": {
                    "description": "Type or category of the comment.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.CasesFileAttachment": {
            "type": "object",
            "properties": {
                "FileExtension": {
                    "description": "Extension of the file.",
                    "type": "string"
                },
                "FileId": {
                    "description": "Unique identifier for the file.",
                    "type": "string"
                },
                "FileName": {
                    "description": "Name of the file.",
                    "type": "string"
                },
                "FileSize": {
                    "description": "Size of the file.",
                    "type": "string"
                },
                "MD5Hash": {
                    "description": "MD5 hash of the file.",
                    "type": "string"
                },
                "SHA256Hash": {
                    "description": "SHA-256 hash of the file.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.CasesItem": {
            "type": "object",
            "properties": {
                "App": {
                    "description": "Application associated with the case.",
                    "type": "string"
                },
                "Approvals": {
                    "description": "List of approvals related to the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "AssetList": {
                    "description": "List of assets associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "AssignedUserId": {
                    "description": "ID of the user assigned to the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "AssignedUserName": {
                    "description": "Name of the user assigned to the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "CaseCategory": {
                    "description": "Category of the case.",
                    "type": "string"
                },
                "CaseCategoryId": {
                    "description": "Unique identifier for the case category.",
                    "type": "string"
                },
                "CaseId": {
                    "description": "Unique identifier for the case.",
                    "type": "string"
                },
                "CaseType": {
                    "description": "Type of the case.",
                    "type": "string"
                },
                "Comments": {
                    "description": "Comments related to the case.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.CasesComment"
                    }
                },
                "CommentsToAppend": {
                    "description": "List of comments to append to the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "CreatedDate": {
                    "description": "Date when the case was created.",
                    "type": "string"
                },
                "Data": {
                    "description": "Additional data associated with the case in raw JSON format, which can be null.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "DataVector": {
                    "description": "Data vector associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Description": {
                    "description": "Description of the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ExpectedFinishTime": {
                    "description": "Expected finish time for the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ExtData": {
                    "description": "Extended data associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "FileAttachments": {
                    "description": "File attachments related to the case.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.CasesFileAttachment"
                    }
                },
                "FilterTags": {
                    "description": "Filter tags associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "LastSentReminderEmailDate": {
                    "description": "Date when the last reminder email was sent related to the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Logs": {
                    "description": "Logs related to the case.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.CasesLog"
                    }
                },
                "MappedFields": {
                    "description": "Mapped fields associated with the case in raw JSON format, which can be null.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "MitreData": {
                    "description": "MITRE data associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.NullableCasesMitreData"
                        }
                    ]
                },
                "ModifiedDate": {
                    "description": "Date when the case was last modified.",
                    "type": "string"
                },
                "Name": {
                    "description": "Name of the case.",
                    "type": "string"
                },
                "NumberOfRepetitions": {
                    "description": "Number of repetitions related to the case, which can be null.",
                    "type": "integer"
                },
                "OccuredDate": {
                    "description": "Date when the case occurred.",
                    "type": "string"
                },
                "Owner": {
                    "description": "Owner of the case.",
                    "type": "string"
                },
                "ParentCaseId": {
                    "description": "Parent case ID, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ParentCaseName": {
                    "description": "Name of the parent case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "PriorityValue": {
                    "description": "Priority value associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "PriorityValueLastCalculationDate": {
                    "description": "Date of the last calculation for priority value related to the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "RealFinishTime": {
                    "description": "Real finish time for the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "RemainingTimeAsHour": {
                    "description": "Remaining time related to the case in hours, which can be null.",
                    "type": "integer"
                },
                "ReminderDate": {
                    "description": "Date for reminders related to the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ReminderEmailCount": {
                    "description": "Count of reminder emails related to the case, which can be null.",
                    "type": "integer"
                },
                "ReminderPeriotsAsHour": {
                    "description": "Reminder periods related to the case in hours, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-int64"
                        }
                    ]
                },
                "Roles": {
                    "description": "Roles associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Severity": {
                    "description": "Severity level of the case.",
                    "type": "string"
                },
                "SimilarityHash": {
                    "description": "Hash value representing similarity with other cases, which can be null.",
                    "type": "string"
                },
                "SourceType": {
                    "description": "Source type of the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "State": {
                    "description": "Current state of the case.",
                    "type": "string"
                },
                "Tags": {
                    "description": "Tags associated with the case, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "TenantID": {
                    "description": "Unique identifier for the tenant associated with the case, which can be null.",
                    "type": "string"
                },
                "Timestamp": {
                    "description": "Timestamp of when the case item was created or last updated.",
                    "type": "string"
                },
                "WaitingTimeAsHour": {
                    "description": "Waiting time related to the case in hours, which can be null.",
                    "type": "integer"
                },
                "_id": {
                    "description": "Unique identifier for the case item.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.CasesLog": {
            "type": "object",
            "properties": {
                "DetailID": {
                    "description": "Unique identifier for the log detail.",
                    "type": "string"
                },
                "Files": {
                    "description": "List of files associated with the log entry, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Message": {
                    "description": "Content of the log message.",
                    "type": "string"
                },
                "Source": {
                    "description": "Source of the log entry.",
                    "type": "string"
                },
                "Time": {
                    "description": "Timestamp of when the log entry was recorded.",
                    "type": "string"
                },
                "Type": {
                    "description": "Type or category of the log entry.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.CasesSearchRequest": {
            "type": "object",
            "properties": {
                "app": {
                    "description": "Application associated with the cases.",
                    "type": "string"
                },
                "dateTimeRange": {
                    "description": "Date-time range filter for cases.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.DateTimeRange"
                        }
                    ]
                },
                "filter": {
                    "description": "Additional filter criteria for cases.",
                    "type": "string"
                },
                "fromIndex": {
                    "description": "Starting index for pagination.",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "Number of items per page for pagination.",
                    "type": "integer"
                },
                "showSubCases": {
                    "description": "Flag indicating whether to include sub-cases in the search results.",
                    "type": "boolean"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.CasesSearchResponse": {
            "type": "object",
            "properties": {
                "FromIndex": {
                    "description": "Starting index for pagination.",
                    "type": "integer"
                },
                "Items": {
                    "description": "List of case items matching the search criteria.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.CasesItem"
                    }
                },
                "PageSize": {
                    "description": "Number of items per page for pagination.",
                    "type": "integer"
                },
                "TotalCount": {
                    "description": "Total count of cases matching the search criteria.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.ClassificationsItem": {
            "type": "object",
            "properties": {
                "DefID": {
                    "description": "Definition ID associated with the classification item.",
                    "type": "integer"
                },
                "FromMarket": {
                    "description": "Flag indicating if the classification item is from the market.",
                    "type": "boolean"
                },
                "FromModules": {
                    "description": "Flag indicating if the classification item is from modules.",
                    "type": "boolean"
                },
                "ID": {
                    "description": "Unique identifier for the classification item.",
                    "type": "string"
                },
                "KillChainPhase": {
                    "description": "Kill chain phase associated with the classification item, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "MitreTags": {
                    "description": "List of MITRE tags associated with the classification item, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-api_davudpasha_MitreTag"
                        }
                    ]
                },
                "Name": {
                    "description": "Name of the classification item.",
                    "type": "string"
                },
                "Severity": {
                    "description": "Severity level associated with the classification item.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ClassificationsSearchRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Additional filter criteria for classifications.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ClassificationsSearchResponse": {
            "type": "object",
            "properties": {
                "FailedItems": {
                    "description": "List of raw messages for items that failed during the search.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Items": {
                    "description": "List of classification items retrieved from the search.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.ClassificationsItem"
                    }
                },
                "SuccessItems": {
                    "description": "List of success items retrieved from the search.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SuccessItem"
                    }
                }
            }
        },
        "api_davudpasha.DateTimeRange": {
            "type": "object",
            "properties": {
                "DateTimeType": {
                    "description": "DateTimeType specifies the type of date time range.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.DateTimeType"
                        }
                    ]
                },
                "EndDate": {
                    "description": "EndDate is the end date of the range.",
                    "type": "string"
                },
                "Field": {
                    "description": "Field specifies the field related to the date time range.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "StartDate": {
                    "description": "StartDate is the start date of the range.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.DateTimeType": {
            "type": "string",
            "enum": [
                "Last5Minutes",
                "Last10Minutes",
                "Last15Minutes",
                "Last30Minutes",
                "Last60Minutes",
                "Last120Minutes",
                "ThisHour",
                "Last6Hours",
                "Last12Hours",
                "Last24Hours",
                "Last48Hours",
                "Last72Hours",
                "Today",
                "Yesterday",
                "ThisWeek",
                "PrevWeek",
                "ThisMonth",
                "LastMonth",
                "AllTime",
                "DateRange"
            ],
            "x-enum-varnames": [
                "DATETIMETYPE_LAST5MINUTES",
                "DATETIMETYPE_LAST10MINUTES",
                "DATETIMETYPE_LAST15MINUTES",
                "DATETIMETYPE_LAST30MINUTES",
                "DATETIMETYPE_LAST60MINUTES",
                "DATETIMETYPE_LAST120MINUTES",
                "DATETIMETYPE_THISHOUR",
                "DATETIMETYPE_LAST6HOURS",
                "DATETIMETYPE_LAST12HOURS",
                "DATETIMETYPE_LAST24HOURS",
                "DATETIMETYPE_LAST48HOURS",
                "DATETIMETYPE_LAST72HOURS",
                "DATETIMETYPE_TODAY",
                "DATETIMETYPE_YESTERDAY",
                "DATETIMETYPE_THISWEEK",
                "DATETIMETYPE_PREVWEEK",
                "DATETIMETYPE_THISMONTH",
                "DATETIMETYPE_LASTMONTH",
                "DATETIMETYPE_ALLTIME",
                "DATETIMETYPE_DATERANGE"
            ]
        },
        "api_davudpasha.ElasticStatsIndexes": {
            "type": "object",
            "properties": {
                "DocsCount": {
                    "description": "Number of documents in the index.",
                    "type": "integer"
                },
                "Health": {
                    "description": "Health status of the index.",
                    "type": "string"
                },
                "Index": {
                    "description": "Name of the index.",
                    "type": "string"
                },
                "IndexType": {
                    "description": "Type of the index.",
                    "type": "string"
                },
                "PrimaryCount": {
                    "description": "Primary shard count for the index.",
                    "type": "string"
                },
                "PrimaryStoreSize": {
                    "description": "Size of primary shards for the index.",
                    "type": "string"
                },
                "ReplicaCount": {
                    "description": "Replica count for the index.",
                    "type": "string"
                },
                "Status": {
                    "description": "Status of the index.",
                    "type": "string"
                },
                "StoreSizeMB": {
                    "description": "Store size of the index in megabytes.",
                    "type": "number"
                }
            }
        },
        "api_davudpasha.ElasticStatsResult": {
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data associated with the result, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Status": {
                    "description": "Status of the Elasticsearch operation.",
                    "type": "boolean"
                },
                "ValidationList": {
                    "description": "List of validation messages.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "optErrorMsg": {
                    "description": "Optional error message, which can be null.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ElasticStatsSearchRequest": {
            "type": "object",
            "properties": {
                "searchFilter": {
                    "description": "Filter criterion for searching Elasticsearch sources.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ElasticStatsSearchResponse": {
            "type": "object",
            "properties": {
                "Indexes": {
                    "description": "List of Elasticsearch indexes with their respective statistics.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.ElasticStatsIndexes"
                    }
                },
                "Result": {
                    "description": "Result of the Elasticsearch statistics search.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ElasticStatsResult"
                        }
                    ]
                },
                "Status": {
                    "description": "Status of the Elasticsearch statistics search operation.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "A list of errors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api_davudpasha.EventsSearchRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "Query specifies the search and filter query settings.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.QueryFilter"
                        }
                    ]
                },
                "reason": {
                    "description": "Reason represents the reason for the event list request.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "SmartRestRequestContext is the context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.EventsSearchResponse": {
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data contains the list of events.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "QueryType": {
                    "description": "QueryType is the type of query used.",
                    "type": "string"
                },
                "SearchTime": {
                    "description": "SearchTime is the time taken for the search.",
                    "type": "integer"
                },
                "SelectedColumns": {
                    "description": "SelectedColumns contains the selected columns.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SelectedColumn"
                    }
                },
                "TotalSize": {
                    "description": "TotalSize is the total number of events.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.FormRef": {
            "type": "object",
            "properties": {
                "current": {
                    "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                }
            }
        },
        "api_davudpasha.GeoLocationsData": {
            "type": "object",
            "properties": {
                "city": {
                    "description": "City name.",
                    "type": "string"
                },
                "country": {
                    "description": "Country name.",
                    "type": "string"
                },
                "countrycode": {
                    "description": "ISO 3166-1 alpha-2 country code.",
                    "type": "string"
                },
                "endip": {
                    "description": "End IP address of the geographical range.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the geographical location data.",
                    "type": "string"
                },
                "iprange": {
                    "description": "IP range associated with the geographical location.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "latitude": {
                    "description": "Latitude coordinate of the geographical location.",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude coordinate of the geographical location.",
                    "type": "number"
                },
                "region": {
                    "description": "Region or state name.",
                    "type": "string"
                },
                "startip": {
                    "description": "Start IP address of the geographical range.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.GeoLocationsSearchRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Filter for searching sources.",
                    "type": "string"
                },
                "query": {
                    "description": "Query filter for searching geographical locations.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.QueryFilter"
                        }
                    ]
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.GeoLocationsSearchResponse": {
            "type": "object",
            "properties": {
                "AfterKey": {
                    "description": "Pagination token indicating where the next page of results should start.",
                    "type": "string"
                },
                "GeolocationDatas": {
                    "description": "Array of geographical location data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.GeoLocationsData"
                    }
                },
                "TotalQuantity": {
                    "description": "Total quantity of results matching the search criteria.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.LookupsLookupType": {
            "type": "string",
            "enum": [
                "IP_Subnet",
                "File_JSON",
                "File_CSV",
                "Database",
                "Static",
                "Blacklist",
                "Static_URL",
                "ActiveDirectory",
                "Active_List"
            ],
            "x-enum-varnames": [
                "LOOKUPTYPE_IPSUBNET",
                "LOOKUPTYPE_FILEJSON",
                "LOOKUPTYPE_FILEJSV",
                "LOOKUPTYPE_DATABASE",
                "LOOKUPTYPE_STATIC",
                "LOOKUPTYPE_BLACKLIST",
                "LOOKUPTYPE_STATICURL",
                "LOOKUPTYPE_ACTIVEDIRECTORY",
                "LOOKUPTYPE_ACTIVELIST"
            ]
        },
        "api_davudpasha.LookupsSearchRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Filter for searching sources.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.LookupsSearchResponse": {
            "type": "object",
            "properties": {
                "Columns": {
                    "description": "Columns of the lookup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Count": {
                    "description": "Count of results matching the lookup criteria.",
                    "type": "integer"
                },
                "Data": {
                    "description": "Raw data of the lookup.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Description": {
                    "description": "Description of the lookup.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Id": {
                    "description": "Identifier of the lookup.",
                    "type": "string"
                },
                "LastExecutionTime": {
                    "description": "Last execution time of the lookup.",
                    "type": "string"
                },
                "LookupType": {
                    "description": "Type of the lookup.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.LookupsLookupType"
                        }
                    ]
                },
                "Name": {
                    "description": "Name of the lookup.",
                    "type": "string"
                },
                "OtherValues": {
                    "description": "Other values associated with the lookup.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.NullableCasesMitreData": {
            "type": "object"
        },
        "api_davudpasha.NullableReportsLatestReportFile": {
            "type": "object"
        },
        "api_davudpasha.NullableReportsQueryExtData": {
            "type": "object"
        },
        "api_davudpasha.NullableScheduleConfig": {
            "type": "object"
        },
        "api_davudpasha.NullableSourceTypesNormalization": {
            "type": "object"
        },
        "api_davudpasha.QueriesItem": {
            "type": "object",
            "properties": {
                "Author": {
                    "description": "Author of the query.",
                    "type": "string"
                },
                "Columns": {
                    "description": "Selected columns for the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-api_davudpasha_SelectedColumn"
                        }
                    ]
                },
                "DateTimeRange": {
                    "description": "Date-time range for the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.DateTimeRange"
                        }
                    ]
                },
                "Description": {
                    "description": "Description of the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "FromMarket": {
                    "description": "Whether the query is from the market.",
                    "type": "boolean"
                },
                "FromModules": {
                    "description": "Whether the query is from modules.",
                    "type": "boolean"
                },
                "HasUpdate": {
                    "description": "Whether the query has an update.",
                    "type": "boolean"
                },
                "ID": {
                    "description": "ID of the query.",
                    "type": "string"
                },
                "InsertDate": {
                    "description": "Date when the query was inserted.",
                    "type": "string"
                },
                "KillChainPhase": {
                    "description": "Kill chain phase associated with the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "LastUpdateDate": {
                    "description": "Date of the last update to the query.",
                    "type": "string"
                },
                "MitreTags": {
                    "description": "MITRE tags associated with the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-api_davudpasha_MitreTag"
                        }
                    ]
                },
                "ModuleGuid": {
                    "description": "GUID of the module.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ModuleId": {
                    "description": "ID of the module.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Name": {
                    "description": "Name of the query.",
                    "type": "string"
                },
                "Query": {
                    "description": "Query string.",
                    "type": "string"
                },
                "QueryType": {
                    "description": "Type of the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.QueriesQueryType"
                        }
                    ]
                },
                "SharedUsersAndGroups": {
                    "description": "Users and groups with whom the query is shared.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Tags": {
                    "description": "Tags associated with the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Version": {
                    "description": "Version of the query.",
                    "type": "number"
                }
            }
        },
        "api_davudpasha.QueriesQueryType": {
            "type": "string",
            "enum": [
                "Normal"
            ],
            "x-enum-varnames": [
                "QUERYTYPE_NORMAL"
            ]
        },
        "api_davudpasha.QueriesSaveRequest": {
            "type": "object",
            "properties": {
                "querySettings": {
                    "$ref": "#/definitions/api_davudpasha.QueriesItem"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.QueriesSaveResponse": {
            "type": "object",
            "properties": {
                "query": {
                    "$ref": "#/definitions/api_davudpasha.QueriesItem"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "api_davudpasha.QueriesSearchRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Filter for the search request.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.QueriesSearchResponse": {
            "type": "object",
            "properties": {
                "FailedItems": {
                    "description": "List of failed items in raw JSON format.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Items": {
                    "description": "List of query items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.QueriesItem"
                    }
                },
                "SuccessItems": {
                    "description": "List of successful items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SuccessItem"
                    }
                }
            }
        },
        "api_davudpasha.QueryFilter": {
            "type": "object",
            "properties": {
                "DateTimeRange": {
                    "description": "DateTimeRange specifies the date time range for filtering events.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.DateTimeRange"
                        }
                    ]
                },
                "QueryOptions": {
                    "description": "QueryOptions stores additional query options.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.QueryOptions"
                        }
                    ]
                },
                "QuerySQL": {
                    "description": "QuerySQL is the SQL query for filtering events.",
                    "type": "string"
                },
                "SearchAfterKeys": {
                    "description": "SearchAfterKeys specifies the keys to use for pagination in search results.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api_davudpasha.QueryOptions": {
            "type": "object",
            "properties": {
                "ShowHighlight": {
                    "description": "ShowHighlight indicates whether to show highlight.",
                    "type": "boolean"
                }
            }
        },
        "api_davudpasha.ReportsChartLegend": {
            "type": "object",
            "properties": {
                "LegendPosition": {
                    "description": "Position of the legend.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ReportsChartVisualization": {
            "type": "object",
            "properties": {
                "ChartType": {
                    "description": "Type of chart.",
                    "type": "string"
                },
                "ColorScheme": {
                    "description": "Color scheme for the chart.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "InnerRadius": {
                    "description": "Inner radius for the chart (applicable for pie charts).",
                    "type": "number"
                },
                "Legend": {
                    "description": "Legend configuration for the chart.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsChartLegend"
                        }
                    ]
                },
                "LineType": {
                    "description": "Line type for the chart.",
                    "type": "string"
                },
                "LineWidth": {
                    "description": "Line width for the chart.",
                    "type": "integer"
                },
                "MaxRowCount": {
                    "description": "Maximum row count for the chart data.",
                    "type": "integer"
                },
                "SerieColors": {
                    "description": "Colors for series in the chart.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Settings": {
                    "description": "Additional settings for the chart.",
                    "type": "string"
                },
                "ShowLabel": {
                    "description": "Indicates whether to show labels on the chart.",
                    "type": "boolean"
                },
                "ShowNullValues": {
                    "description": "Indicates whether to show null values on the chart.",
                    "type": "boolean"
                },
                "ShowValues": {
                    "description": "Indicates whether to show values on the chart.",
                    "type": "boolean"
                },
                "SlicesNumber": {
                    "description": "Number of slices for pie charts.",
                    "type": "integer"
                },
                "UiDPModuleId": {
                    "description": "ID of the UI DP module.",
                    "type": "string"
                },
                "XAxis": {
                    "description": "X-axis configuration for the chart.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsChartXAxis"
                        }
                    ]
                },
                "YAxis": {
                    "description": "Y-axis configuration for the chart.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsChartYAxis"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ReportsChartXAxis": {
            "type": "object",
            "properties": {
                "Angle": {
                    "description": "Angle for x-axis labels.",
                    "type": "integer"
                },
                "Interval": {
                    "description": "Interval for x-axis values.",
                    "type": "integer"
                },
                "Label": {
                    "description": "Label for the x-axis.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ReportsChartYAxis": {
            "type": "object",
            "properties": {
                "Interval": {
                    "description": "Interval for y-axis values.",
                    "type": "integer"
                },
                "Label": {
                    "description": "Label for the y-axis.",
                    "type": "string"
                },
                "MaxValue": {
                    "description": "Maximum value for the y-axis.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableInt64"
                        }
                    ]
                },
                "MinValue": {
                    "description": "Minimum value for the y-axis.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableInt64"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ReportsData": {
            "type": "object",
            "properties": {
                "AddCoverPage": {
                    "description": "Indicates whether to add a cover page to the report.",
                    "type": "boolean"
                },
                "CoverPage": {
                    "description": "Cover page content of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "CreateDate": {
                    "description": "Creation date of the report.",
                    "type": "string"
                },
                "FileName": {
                    "description": "Filename of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "FilePassword": {
                    "description": "Password for the report file.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Footer": {
                    "description": "Footer content of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Header": {
                    "description": "Header content of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Language": {
                    "description": "Language of the report.",
                    "type": "string"
                },
                "MaxRowCount": {
                    "description": "Maximum row count for the report data.",
                    "type": "integer"
                },
                "Name": {
                    "description": "Name of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Page": {
                    "description": "Page settings of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsPage"
                        }
                    ]
                },
                "ReportId": {
                    "description": "ID of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ReportTheme": {
                    "description": "Theme of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ReportType": {
                    "description": "Type of the report. ReportType: csv",
                    "type": "string"
                },
                "Sections": {
                    "description": "Sections included in the report.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Theme": {
                    "description": "Theme of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ReportsEmailConfigs": {
            "type": "object",
            "properties": {
                "Email": {
                    "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                },
                "Subject": {
                    "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                }
            }
        },
        "api_davudpasha.ReportsItem": {
            "type": "object",
            "properties": {
                "Actions": {
                    "description": "Actions associated with the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.Actions"
                        }
                    ]
                },
                "ApplicationName": {
                    "description": "Name of the application associated with the report.",
                    "type": "string"
                },
                "Author": {
                    "description": "Author of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "CreatedDate": {
                    "description": "Date when the report was created.",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "EmailConfigs": {
                    "description": "Email configuration for the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsEmailConfigs"
                        }
                    ]
                },
                "ID": {
                    "description": "ID of the report.",
                    "type": "string"
                },
                "IsActive": {
                    "description": "Indicates if the report is active.",
                    "type": "boolean"
                },
                "LastGenerationTime": {
                    "description": "Date and time when the report was last generated.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "LatestReportFile": {
                    "description": "Latest file associated with the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.NullableReportsLatestReportFile"
                        }
                    ]
                },
                "ModifiedDate": {
                    "description": "Date when the report was last modified.",
                    "type": "string"
                },
                "ModuleFilter": {
                    "description": "Filter for the module.",
                    "type": "string"
                },
                "Name": {
                    "description": "Name of the report.",
                    "type": "string"
                },
                "NextGenerationTime": {
                    "description": "Date and time when the report is scheduled to be generated next.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "PageSettings": {
                    "description": "Page settings for the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Parameters": {
                    "description": "Parameters for the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsParameters"
                        }
                    ]
                },
                "RemoteInterfaceName": {
                    "description": "Name of the remote interface.",
                    "type": "string"
                },
                "RemoteMethodName": {
                    "description": "Name of the remote method.",
                    "type": "string"
                },
                "ReportData": {
                    "description": "Data related to the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsData"
                        }
                    ]
                },
                "ReportId": {
                    "description": "ID of the report.",
                    "type": "string"
                },
                "ReportLink": {
                    "description": "Link to access the report.",
                    "type": "string"
                },
                "ReportQuery": {
                    "description": "Queries associated with the report.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.ReportsQuery"
                    }
                },
                "Schedule": {
                    "description": "Schedule configuration for generating the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.NullableScheduleConfig"
                        }
                    ]
                },
                "SharedUsersAndGroups": {
                    "description": "Users and groups with whom the report is shared.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "SubExecutorModuleFilter": {
                    "description": "Filter for the sub-executor module.",
                    "type": "string"
                },
                "Tags": {
                    "description": "Tags associated with the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Username": {
                    "description": "Username associated with the report.",
                    "type": "string"
                },
                "Version": {
                    "description": "Version of the report.",
                    "type": "number"
                },
                "chechboxWeekly": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api_davudpasha.ReportsItemType": {
            "type": "string",
            "enum": [
                "Query",
                "PythonScript",
                "Custom",
                "Code"
            ],
            "x-enum-varnames": [
                "ITEMTYPE_QUERY",
                "ITEMTYPE_PYTHONSCRIPT",
                "ITEMTYPE_CUSTOM",
                "ITEMTYPE_CODE"
            ]
        },
        "api_davudpasha.ReportsPage": {
            "type": "object",
            "properties": {
                "BottomMargin": {
                    "description": "Bottom margin of the page.",
                    "type": "integer"
                },
                "FooterDistance": {
                    "description": "Distance of the footer from the bottom of the page.",
                    "type": "integer"
                },
                "HeaderDistance": {
                    "description": "Distance of the header from the top of the page.",
                    "type": "integer"
                },
                "IsA3": {
                    "description": "Indicates if the page size is A3.",
                    "type": "boolean"
                },
                "IsLandscape": {
                    "description": "Indicates if the page orientation is landscape.",
                    "type": "boolean"
                },
                "LeftMargin": {
                    "description": "Left margin of the page.",
                    "type": "integer"
                },
                "RightMargin": {
                    "description": "Right margin of the page.",
                    "type": "integer"
                },
                "TopMargin": {
                    "description": "Top margin of the page.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.ReportsParameters": {
            "type": "object",
            "properties": {
                "Datas": {
                    "description": "Raw JSON message for the report data.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "IsActive": {
                    "description": "Indicates if the report is active.",
                    "type": "boolean"
                },
                "Parameters": {
                    "description": "List of parameters for the report.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api_davudpasha.ReportsQuery": {
            "type": "object",
            "properties": {
                "ChartVisualization": {
                    "description": "Visualization settings for the chart.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsChartVisualization"
                        }
                    ]
                },
                "Data": {
                    "description": "Data related to the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsQueryData"
                        }
                    ]
                },
                "ExtData": {
                    "description": "Extended data for the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.NullableReportsQueryExtData"
                        }
                    ]
                },
                "FormRef": {
                    "description": "Reference to the form used for generating the report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.FormRef"
                        }
                    ]
                },
                "Key": {
                    "description": "Represents a key value, used as an identifier.",
                    "type": "number"
                },
                "Nane": {
                    "description": "Name of the query.",
                    "type": "string"
                },
                "ShowChart": {
                    "description": "Indicates if the chart should be shown.",
                    "type": "boolean"
                },
                "ShowTable": {
                    "description": "Indicates if the table should be shown.",
                    "type": "boolean"
                },
                "TableVisualization": {
                    "description": "Visualization settings for the table.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsTableVisualization"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ReportsQueryData": {
            "type": "object",
            "properties": {
                "Code": {
                    "description": "Code related to the query.",
                    "type": "string"
                },
                "DateTimeRange": {
                    "description": "Date-time range for the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.DateTimeRange"
                        }
                    ]
                },
                "ItemType": {
                    "description": "Type of the item. ItemType: PythonScript, Query, Custom, Code",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ReportsItemType"
                        }
                    ]
                },
                "MaxRowCount": {
                    "description": "Maximum row count for the query data.",
                    "type": "integer"
                },
                "QueryID": {
                    "description": "ID of the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "QueryStr": {
                    "description": "Query string.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ScriptArguments": {
                    "description": "Arguments for the script.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "ScriptPath": {
                    "description": "Path to the script related to the query.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ReportsSaveRequest": {
            "type": "object",
            "properties": {
                "application": {
                    "type": "string"
                },
                "report": {
                    "$ref": "#/definitions/api_davudpasha.ReportsItem"
                },
                "schedule": {
                    "$ref": "#/definitions/api_davudpasha.ScheduleConfig"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.ReportsSaveResponse": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                },
                "Status": {
                    "type": "boolean"
                },
                "ValidationList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "optErrorMsg": {
                    "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                }
            }
        },
        "api_davudpasha.ReportsSearchRequest": {
            "type": "object",
            "properties": {
                "applicationName": {
                    "description": "Name of the application.",
                    "type": "string"
                },
                "searchFilter": {
                    "description": "Filter for the search.",
                    "type": "string"
                },
                "showPassive": {
                    "description": "Indicates whether to show passive reports.",
                    "type": "boolean"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                },
                "startDate": {
                    "description": "Start date for the search.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.ReportsTableVisualization": {
            "type": "object",
            "properties": {
                "ChartType": {
                    "description": "Type of the chart.",
                    "type": "string"
                },
                "ColumnValues": {
                    "description": "List of values corresponding to specific columns in a dataset.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Columns": {
                    "description": "Columns for the visualization.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MaxRowCount": {
                    "description": "Maximum row count.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.ScheduleConfig": {
            "type": "object",
            "properties": {
                "Date": {
                    "description": "Date for the schedule.",
                    "type": "string"
                },
                "DateStr": {
                    "description": "Date string for the schedule.",
                    "type": "string"
                },
                "Day": {
                    "description": "Day of the schedule.",
                    "type": "string"
                },
                "DayNo": {
                    "description": "Number of the day.",
                    "type": "integer"
                },
                "DayNumber": {
                    "description": "Number representing the day.",
                    "type": "integer"
                },
                "Days": {
                    "description": "Days for the schedule.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DaysNumber": {
                    "description": "Numbers representing days for the schedule.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ScheduleFullDateTime": {
                    "description": "Full date and time of the schedule.",
                    "type": "string"
                },
                "ScheduleType": {
                    "description": "Type of the schedule.",
                    "type": "string"
                },
                "Time": {
                    "description": "Time for the schedule.",
                    "type": "string"
                },
                "TimeTics": {
                    "description": "Time ticks.",
                    "type": "integer"
                },
                "TimeType": {
                    "description": "Type of time for the schedule.",
                    "type": "string"
                },
                "TimeValue": {
                    "description": "Value representing time for the schedule.",
                    "type": "integer"
                },
                "WeekType": {
                    "description": "Type of the week for the schedule.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SearchArchivesData": {
            "type": "object",
            "properties": {
                "Query": {
                    "description": "Query contains the search query parameters.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.SearchArchivesQuery"
                        }
                    ]
                },
                "Status": {
                    "description": "Status represents the status of the search operation.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.SearchArchivesStatus"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.SearchArchivesGetRequest": {
            "type": "object",
            "properties": {
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SearchArchivesGetResponse": {
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data contains an array of SearchArchivesData retrieved from the search archives.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SearchArchivesData"
                    }
                }
            }
        },
        "api_davudpasha.SearchArchivesQuery": {
            "type": "object",
            "properties": {
                "CreateDate": {
                    "description": "CreateDate indicates the creation date of the search query.",
                    "type": "string"
                },
                "DateTimeRange": {
                    "description": "DateTimeRange specifies the date and time range for the search.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.DateTimeRange"
                        }
                    ]
                },
                "DeleteAfterDay": {
                    "description": "DeleteAfterDay specifies the number of days after which the search results will be deleted.",
                    "type": "integer"
                },
                "Excludes": {
                    "description": "Excludes contains a list of strings to exclude from the search.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Id": {
                    "description": "ID represents the identifier of the search query.",
                    "type": "string"
                },
                "Includes": {
                    "description": "Includes contains a list of strings to include in the search.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "LgsIds": {
                    "description": "LgsIDs contains a list of IDs associated with the logs for the search.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "LgsNames": {
                    "description": "LgsNames contains a list of names associated with the logs for the search.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Name": {
                    "description": "Name specifies the name of the search query.",
                    "type": "string"
                },
                "ParallelCount": {
                    "description": "ParallelCount specifies the number of parallel searches to be conducted.",
                    "type": "integer"
                },
                "PauseRequest": {
                    "description": "PauseRequest indicates whether the search request is paused.",
                    "type": "boolean"
                },
                "ReportColNames": {
                    "description": "ReportColNames contains a list of column names for the search report.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "SearchActiveLgsOnly": {
                    "description": "SearchActiveLgsOnly indicates whether to search only on active logs.",
                    "type": "boolean"
                },
                "SearchOnRawLogs": {
                    "description": "SearchOnRawLogs indicates whether to search on raw log data.",
                    "type": "boolean"
                },
                "Size": {
                    "description": "Size specifies the size of the search query.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.SearchArchivesStatus": {
            "type": "object",
            "properties": {
                "ActualEndDate": {
                    "description": "ActualEndDate specifies the actual end date of the search execution.",
                    "type": "string"
                },
                "ActualStartDate": {
                    "description": "ActualStartDate indicates the actual start date of the search execution.",
                    "type": "string"
                },
                "ExecutionDurationMs": {
                    "description": "ExecutionDurationMs specifies the duration of the search execution in milliseconds.",
                    "type": "integer"
                },
                "ExecutionStartTimeUtc": {
                    "description": "ExecutionStartTimeUtc indicates the UTC start time of the search execution.",
                    "type": "string"
                },
                "FoundLines": {
                    "description": "FoundLines represents the number of lines found during the search.",
                    "type": "integer"
                },
                "LimitReached": {
                    "description": "LimitReached specifies if any search limit was reached.",
                    "type": "boolean"
                },
                "Message": {
                    "description": "Message contains an optional message related to the search archive status.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "PauseRequest": {
                    "description": "PauseRequest specifies if there's a request to pause the search.",
                    "type": "boolean"
                },
                "ProcessedFileCount": {
                    "description": "ProcessedFileCount specifies the number of files processed during the search.",
                    "type": "integer"
                },
                "ProcessedFileDate": {
                    "description": "ProcessedFileDate indicates the date of the processed files.",
                    "type": "string"
                },
                "RunningMachineIp": {
                    "description": "RunningMachineIP represents the IP address of the machine where the search is running.",
                    "type": "string"
                },
                "ScannedLines": {
                    "description": "ScannedLines indicates the number of lines scanned during the search.",
                    "type": "integer"
                },
                "SearchArchiveId": {
                    "description": "SearchArchiveID represents the identifier of the search archive.",
                    "type": "string"
                },
                "Status": {
                    "description": "Status indicates the current status of the search archive.",
                    "type": "string"
                },
                "TenantID": {
                    "description": "TenantID represents the identifier of the tenant associated with the search.",
                    "type": "string"
                },
                "Timestamp": {
                    "description": "Timestamp indicates the timestamp associated with the search status.",
                    "type": "string"
                },
                "_id": {
                    "description": "ID represents the unique identifier of the search status.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SelectedColumn": {
            "type": "object",
            "properties": {
                "DisplayText": {
                    "description": "Text to display for the column.",
                    "type": "string"
                },
                "Lookup": {
                    "description": "Lookup value for the column.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Value": {
                    "description": "Value of the column.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesClassificationDefinition": {
            "type": "object",
            "properties": {
                "DefID": {
                    "description": "DefID specifies the definition ID associated with the classification.",
                    "type": "integer"
                },
                "FromMarket": {
                    "description": "FromMarket specifies if the classification is from the market.",
                    "type": "boolean"
                },
                "FromModules": {
                    "description": "FromModules specifies if the classification is from modules.",
                    "type": "boolean"
                },
                "ID": {
                    "description": "ID represents the identifier of the classification definition.",
                    "type": "string"
                },
                "KillChainPhase": {
                    "description": "KillChainPhase specifies the kill chain phase associated with the classification.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "MitreCreationDate": {
                    "description": "MitreCreationDate indicates the MITRE creation date of the classification.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "MitreTags": {
                    "description": "MitreTags contains a list of MITRE tags associated with the classification.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-api_davudpasha_MitreTag"
                        }
                    ]
                },
                "Name": {
                    "description": "Name specifies the name of the classification definition.",
                    "type": "string"
                },
                "Severity": {
                    "description": "Severity indicates the severity level associated with the classification.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesClassificationRule": {
            "type": "object",
            "properties": {
                "ClassificationID": {
                    "description": "ClassificationID specifies the identifier for the classification rule.",
                    "type": "string"
                },
                "QueryStr": {
                    "description": "QueryStr represents the query string for the classification rule.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesExpression": {
            "type": "object",
            "properties": {
                "ExcludeThisExpression": {
                    "description": "ExcludeThisExpression indicates whether to exclude this expression.",
                    "type": "boolean"
                },
                "Key": {
                    "description": "Represents a key value, used as an identifier.",
                    "type": "number"
                },
                "LogParserData": {
                    "description": "LogParserData contains the log parser data for the expression.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.SourceTypesLogParserData"
                        }
                    ]
                },
                "LogParserType": {
                    "description": "LogParserType specifies the type of the log parser used. Example: Module csiem.parser.regex,\nModule csiem.parser.delimiter, Module csiem.parser.csv, Module csiem.parser.code, Module csiem.parser.static\nModule csiem.parser.db, Module csiem.parser.none",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.SourceTypesParserType"
                        }
                    ]
                },
                "Mapping": {
                    "description": "Mapping specifies the mappings associated with the expression.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourceTypesMapping"
                    }
                },
                "Name": {
                    "description": "Name specifies the name of the expression.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesExpressionField": {
            "type": "object",
            "properties": {
                "CorrectTwoDigitDayFormat_Position": {
                    "description": "CorrectTwoDigitDayFormatPosition specifies the position for correcting two-digit day format.",
                    "type": "integer"
                },
                "DateFormat": {
                    "description": "DateFormat specifies the date format for the expression field.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "DateLang": {
                    "description": "DateLang specifies the date language for the expression field.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "DateTrim": {
                    "description": "DateTrim specifies if date trimming is enabled for the expression field.",
                    "type": "boolean"
                },
                "EndIndex": {
                    "description": "EndIndex specifies the ending index for the expression field.",
                    "type": "integer"
                },
                "FormRef": {
                    "description": "FormRef references the related form structure.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.FormRef"
                        }
                    ]
                },
                "Index": {
                    "description": "Index specifies if indexing is enabled for the expression field.",
                    "type": "boolean"
                },
                "Key": {
                    "description": "Represents a key value, used as an identifier.",
                    "type": "number"
                },
                "Name": {
                    "description": "Name specifies the name of the expression field.",
                    "type": "string"
                },
                "Normalization": {
                    "description": "Normalization specifies the normalization settings for the expression field.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.NullableSourceTypesNormalization"
                        }
                    ]
                },
                "StartIndex": {
                    "description": "StartIndex specifies the starting index for the expression field.",
                    "type": "integer"
                },
                "Type": {
                    "description": "Type specifies the type of the expression field.",
                    "type": "string"
                },
                "Used": {
                    "description": "Used indicates if the expression field is used.",
                    "type": "boolean"
                },
                "ValueName": {
                    "description": "ValueName indicates the value name associated with the expression field.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.SourceTypesItem": {
            "type": "object",
            "properties": {
                "Author": {
                    "description": "Author specifies the author of the item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "CatCode": {
                    "description": "CatCode specifies the category code of the item.",
                    "type": "string"
                },
                "ClassificationDefs": {
                    "description": "ClassificationDefs contains classification definitions associated with the item.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourceTypesClassificationDefinition"
                    }
                },
                "ClassificationRules": {
                    "description": "ClassificationRules contains classification rules associated with the item.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourceTypesClassificationRule"
                    }
                },
                "CopyFromMarket": {
                    "description": "CopyFromMarket indicates if the item is copied from the market.",
                    "type": "boolean"
                },
                "DashboardItems": {
                    "description": "DashboardItems contains items associated with the dashboard.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DefCode": {
                    "description": "DefCode specifies the definition code of the item.",
                    "type": "string"
                },
                "Expression": {
                    "description": "Expressions contains expressions associated with the item.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourceTypesExpression"
                    }
                },
                "ExpressionFields": {
                    "description": "ExpressionFields contains expression fields associated with the item.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourceTypesExpressionField"
                    }
                },
                "FromMarket": {
                    "description": "FromMarket indicates if the item is sourced from the market.",
                    "type": "boolean"
                },
                "FromModules": {
                    "description": "FromModules indicates if the item is sourced from modules.",
                    "type": "boolean"
                },
                "HasUpdate": {
                    "description": "HasUpdate indicates if the item has updates available.",
                    "type": "boolean"
                },
                "Icon": {
                    "description": "Icon specifies the icon associated with the item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ModuleGuid": {
                    "description": "ModuleGGUID specifies the GUID of the module associated with the item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ModuleId": {
                    "description": "ModuleID specifies the ID of the module associated with the item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Name": {
                    "description": "Name specifies the name of the item.",
                    "type": "string"
                },
                "ReleaseDate": {
                    "description": "ReleaseDate specifies the release date of the item.",
                    "type": "string"
                },
                "SourceReaderType": {
                    "description": "SourceReaderType specifies the type of source reader used. Example: FILE, NOPARSER, DB, EVENTLOG",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.SourceTypesReaderType"
                        }
                    ]
                },
                "Version": {
                    "description": "Version specifies the version number of the item.",
                    "type": "number"
                }
            }
        },
        "api_davudpasha.SourceTypesLogParserData": {
            "type": "object",
            "properties": {
                "CodeStr": {
                    "description": "CodeStr specifies the code string associated with log parsing.",
                    "type": "string"
                },
                "Delimiter": {
                    "description": "Delimiter specifies the delimiter used in parsing logs.",
                    "type": "string"
                },
                "ExpressionFieldLengths": {
                    "description": "ExpressionFieldLengths specifies the lengths of expression fields associated with log parsing.",
                    "type": "string"
                },
                "IDColumn": {
                    "description": "IDColumn specifies the column used as the ID.",
                    "type": "string"
                },
                "IDColumnType": {
                    "description": "IDColumnType specifies the type of the ID column.",
                    "type": "string"
                },
                "IDDateTimeCustomFormat": {
                    "description": "IDDateTimeCustomFormat specifies the custom date-time format for ID.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Limit": {
                    "description": "Limit specifies the limit for log parsing.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableInt64"
                        }
                    ]
                },
                "LimitID": {
                    "description": "LimitID specifies the ID limit associated with log parsing.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "MustContain": {
                    "description": "MustContain specifies a string that must be contained in the log.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "MustContainParts": {
                    "description": "MustContainParts specifies the number of parts that must be contained in the log.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableInt64"
                        }
                    ]
                },
                "Query": {
                    "description": "Query specifies the query associated with log parsing.",
                    "type": "string"
                },
                "RegexStr": {
                    "description": "RegexStr specifies the regex string associated with log parsing.",
                    "type": "string"
                },
                "TableName": {
                    "description": "TableName specifies the table name associated with log parsing.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesMapping": {
            "type": "object",
            "properties": {
                "Field": {
                    "description": "Field specifies the field for mapping.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesParserType": {
            "type": "string",
            "enum": [
                "Module csiem.parser.regex",
                "Module csiem.parser.delimiter",
                "Module csiem.parser.csv",
                "Module csiem.parser.code",
                "Module csiem.parser.static",
                "Module csiem.parser.db",
                "Module csiem.parser.none"
            ],
            "x-enum-varnames": [
                "PARSERTYPE_REGEX",
                "PARSERTYPE_DELIMITER",
                "PARSERTYPE_CSV",
                "PARSERTYPE_CODE",
                "PARSERTYPE_STATIC",
                "PARSERTYPE_DB",
                "PARSERTYPE_NONE"
            ]
        },
        "api_davudpasha.SourceTypesReaderType": {
            "type": "string",
            "enum": [
                "FILE",
                "NOPARSER",
                "DB",
                "EVENTLOG"
            ],
            "x-enum-varnames": [
                "READERTYPE_FILE",
                "READERTYPE_NOPARSER",
                "READERTYPE_DB",
                "READERTYPE_EVENTLOG"
            ]
        },
        "api_davudpasha.SourceTypesSaveRequest": {
            "type": "object",
            "properties": {
                "lgsDef": {
                    "$ref": "#/definitions/api_davudpasha.SourceTypesItem"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesSearchRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Filter for searching source types.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourceTypesSearchResponse": {
            "type": "object",
            "properties": {
                "FailedItems": {
                    "description": "Items that failed during the search.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Items": {
                    "description": "Items retrieved from the search.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourceTypesItem"
                    }
                },
                "SuccessItems": {
                    "description": "Items that were successfully retrieved.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SuccessItem"
                    }
                }
            }
        },
        "api_davudpasha.SourcesItem": {
            "type": "object",
            "properties": {
                "AgentId": {
                    "description": "ID of the associated agent.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "AgentIds": {
                    "description": "IDs of associated agents.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "AlertTimeout": {
                    "description": "Timeout for alerts.",
                    "type": "integer"
                },
                "AssetTags": {
                    "description": "Asset tags associated with the source item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string"
                        }
                    ]
                },
                "Author": {
                    "description": "Author of the source item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "BlockCount": {
                    "description": "Block count for the source item.",
                    "type": "integer"
                },
                "DiscardedLogsConfig": {
                    "description": "Configuration for discarded logs.",
                    "type": "string"
                },
                "Enabled": {
                    "description": "Indicates if the source item is enabled.",
                    "type": "boolean"
                },
                "Group": {
                    "description": "Group of the source item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Id": {
                    "description": "ID of the source item.",
                    "type": "string"
                },
                "IndexGroupName": {
                    "description": "Name of the index group.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "IsAgentSource": {
                    "description": "Indicates if the source item is an agent source.",
                    "type": "boolean"
                },
                "IsDeleted": {
                    "description": "Indicates if the source item is deleted.",
                    "type": "boolean"
                },
                "IsEditable": {
                    "description": "Indicates if the source item is editable.",
                    "type": "boolean"
                },
                "LogOperations": {
                    "description": "Log operations associated with the source item.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourcesLogOperation"
                    }
                },
                "LogReaderData": {
                    "description": "Data related to log reader.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "LogReaderType": {
                    "description": "Type of the log reader.",
                    "type": "string"
                },
                "LogRemoveFormat": {
                    "description": "Format to remove logs.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "LogRemoveTime": {
                    "description": "Time to remove logs.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "LogSourceDefCode": {
                    "description": "Code defining the log source.",
                    "type": "string"
                },
                "Name": {
                    "description": "Name of the source item.",
                    "type": "string"
                },
                "ParallelOptions": {
                    "description": "Parallel options for the source item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.SourcesParallelOptions"
                        }
                    ]
                },
                "ScheduleConfig": {
                    "description": "Schedule configuration for the source item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.NullableScheduleConfig"
                        }
                    ]
                },
                "StoreRawLogs": {
                    "description": "Indicates if raw logs should be stored.",
                    "type": "boolean"
                },
                "StoreRawLogsLgs": {
                    "description": "Name of the LGS for storing raw logs.",
                    "type": "string"
                },
                "Tags": {
                    "description": "Tags associated with the source item.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "UseSecondaryWriter": {
                    "description": "Indicates if a secondary writer should be used.",
                    "type": "boolean"
                },
                "WriteRawLogs": {
                    "description": "Indicates if raw logs should be written.",
                    "type": "boolean"
                },
                "dashboardId": {
                    "description": "ID of the associated dashboard.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "dashboardName": {
                    "description": "Name of the associated dashboard.",
                    "type": "string"
                },
                "label": {
                    "description": "Label of the source item.",
                    "type": "string"
                },
                "value": {
                    "description": "Value of the source item.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourcesLogOperation": {
            "type": "object",
            "properties": {
                "ModuleName": {
                    "description": "Name of the module.",
                    "type": "string"
                },
                "Parameters": {
                    "description": "Parameters for the log operation.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Priority": {
                    "description": "Priority of the log operation.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourcesParallelOptions": {
            "type": "object",
            "properties": {
                "FileBlockSizeMb": {
                    "description": "Size of file blocks for parallel processing, in megabytes.",
                    "type": "integer"
                },
                "IsActive": {
                    "description": "Indicates whether parallel processing is active.",
                    "type": "boolean"
                },
                "TaskCount": {
                    "description": "Number of tasks for parallel processing.",
                    "type": "integer"
                },
                "TimeoutSec": {
                    "description": "Timeout duration for parallel processing, in seconds.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.SourcesSearchRequest": {
            "type": "object",
            "properties": {
                "searchFilter": {
                    "description": "SearchFilter for searching sources.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SourcesSearchResponse": {
            "type": "object",
            "properties": {
                "FailedItems": {
                    "description": "Items that failed during the search.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Items": {
                    "description": "Items retrieved from the search.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SourcesItem"
                    }
                },
                "SuccessItems": {
                    "description": "Items that were successfully retrieved.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SuccessItem"
                    }
                }
            }
        },
        "api_davudpasha.SuccessItem": {
            "type": "object",
            "properties": {
                "Application": {
                    "description": "Application associated with the success item.",
                    "type": "string"
                },
                "Keys": {
                    "description": "Keys related to the success item.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SourceType": {
                    "description": "Source type of the success item.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.SystemLogsItem": {
            "type": "object",
            "properties": {
                "TenantID": {
                    "description": "TenantID specifies the ID of the tenant associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Timestamp": {
                    "description": "Timestamp specifies the timestamp associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "_id": {
                    "description": "ID specifies the ID of the log item.",
                    "type": "string"
                },
                "app": {
                    "description": "App specifies the application name related to the log item.",
                    "type": "string"
                },
                "data": {
                    "description": "Data specifies additional data associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "dvcip": {
                    "description": "DeviceIP specifies the device IP related to the log item.",
                    "type": "string"
                },
                "dvcname": {
                    "description": "DeviceName specifies the device name related to the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "entityid": {
                    "description": "EntityID specifies the entity ID associated with the log item.",
                    "type": "string"
                },
                "entityname": {
                    "description": "EntityName specifies the entity name associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "entitytype": {
                    "description": "EntityType specifies the entity type associated with the log item.",
                    "type": "string"
                },
                "eventid": {
                    "description": "EventID specifies the event ID associated with the log item.",
                    "type": "string"
                },
                "link": {
                    "description": "Link specifies a link associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "msg": {
                    "description": "Message contains the main message of the log item.",
                    "type": "string"
                },
                "optid1": {
                    "description": "OptID1 specifies optional ID 1 associated with the log item.",
                    "type": "string"
                },
                "optid2": {
                    "description": "OptID2 specifies optional ID 2 associated with the log item.",
                    "type": "string"
                },
                "producer": {
                    "description": "Producer specifies the producer of the log item.",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason specifies the reason associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "stacktrace": {
                    "description": "StackTrace specifies the stack trace associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "stacktrace_JsonStyled": {
                    "description": "StackTraceJsonStyled specifies the JSON-styled stack trace associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "svr": {
                    "description": "Severity specifies the severity level of the log item.",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags specifies tags associated with the log item.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Title specifies the title associated with the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ts": {
                    "description": "TS specifies the timestamp of the log item.",
                    "type": "string"
                },
                "ver": {
                    "description": "Version specifies the version information related to the log item.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                }
            }
        },
        "api_davudpasha.SystemLogsSearchRequest": {
            "type": "object",
            "properties": {
                "appName": {
                    "description": "AppName specifies the name of the application to filter logs.",
                    "type": "string"
                },
                "dateTimeRange": {
                    "description": "DateTimeRange specifies the date and time range for log filtering.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.DateTimeRange"
                        }
                    ]
                },
                "filter": {
                    "description": "Filter specifies additional filtering criteria for logs.",
                    "type": "string"
                },
                "fromIndex": {
                    "description": "FromIndex specifies the starting index for pagination.",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "PageSize specifies the number of logs per page in pagination.",
                    "type": "integer"
                },
                "severity": {
                    "description": "Severity specifies the severity level of logs to filter.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "showAllTenantsData": {
                    "description": "ShowAllTenantsData indicates whether to include data from all tenants in the results.",
                    "type": "boolean"
                },
                "showServicesData": {
                    "description": "ShowServicesData indicates whether to include service-related data in the results.",
                    "type": "boolean"
                },
                "smartRestRequestContext": {
                    "description": "SmartRestRequestContext specifies the context for a smart REST request.",
                    "type": "string"
                },
                "visualStyled": {
                    "description": "VisualStyled indicates whether the search results are visually styled.",
                    "type": "boolean"
                }
            }
        },
        "api_davudpasha.SystemLogsSearchResponse": {
            "type": "object",
            "properties": {
                "FromIndex": {
                    "description": "FromIndex specifies the starting index for pagination.",
                    "type": "integer"
                },
                "Items": {
                    "description": "Items contains the list of system logs items retrieved from the search.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SystemLogsItem"
                    }
                },
                "PageSize": {
                    "description": "PageSize specifies the number of logs per page in pagination.",
                    "type": "integer"
                },
                "TotalCount": {
                    "description": "TotalCount specifies the total count of logs matching the search criteria.",
                    "type": "integer"
                }
            }
        },
        "api_davudpasha.TagCategory": {
            "type": "string",
            "enum": [
                "All",
                "Query",
                "Alert",
                "Report"
            ],
            "x-enum-varnames": [
                "TAGCATEGORY_ALL",
                "TAGCATEGORY_QUERY",
                "TAGCATEGORY_ALERT",
                "TAGCATEGORY_REPORT"
            ]
        },
        "api_davudpasha.TagsItem": {
            "type": "object",
            "properties": {
                "Category": {
                    "description": "Category specifies the category of the tag.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.TagCategory"
                        }
                    ]
                },
                "ID": {
                    "description": "ID represents the identifier of the tag.",
                    "type": "string"
                },
                "Name": {
                    "description": "Name specifies the name of the tag.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.TagsSearchRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Category specifies the category of tags to search for.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.TagCategory"
                        }
                    ]
                },
                "searchFilter": {
                    "description": "SearchFilter specifies an optional filter string for tag search.",
                    "type": "string"
                },
                "smartRestRequestContext": {
                    "description": "SmartRestRequestContext provides context for Smart REST requests.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.TagsSearchResponse": {
            "type": "object",
            "properties": {
                "FailedItems": {
                    "description": "FailedItems contains a list of failed items in raw JSON format.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Items": {
                    "description": "Items contains the list of tags retrieved from the search.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.TagsItem"
                    }
                },
                "SuccessItems": {
                    "description": "SuccessItems contains a list of successful items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_davudpasha.SuccessItem"
                    }
                }
            }
        },
        "api_davudpasha.TasksSearchRequest": {
            "type": "object",
            "properties": {
                "extraFilter": {
                    "description": "ExtraFilter specifies additional filter criteria for task search.",
                    "type": "string"
                },
                "filter": {
                    "description": "Filter specifies the main filter criteria for task search.",
                    "type": "string"
                },
                "showServicesData": {
                    "description": "ShowServicesData indicates whether to include service data in the search results.",
                    "type": "boolean"
                },
                "smartRestRequestContext": {
                    "description": "Context for the Smart REST request.",
                    "type": "string"
                }
            }
        },
        "api_davudpasha.TasksSearchResponse": {
            "type": "object",
            "properties": {
                "Active": {
                    "description": "Active indicates whether the task is active.",
                    "type": "boolean"
                },
                "ApplicationName": {
                    "description": "ApplicationName specifies the name of the application associated with the task.",
                    "type": "string"
                },
                "CreatedDate": {
                    "description": "CreatedDate specifies the creation date of the task.",
                    "type": "string"
                },
                "Data": {
                    "description": "Data specifies additional data associated with the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "DisableRetryIfFail": {
                    "description": "DisableRetryIfFail indicates whether retry should be disabled if the task fails.",
                    "type": "boolean"
                },
                "ExecutorName": {
                    "description": "ExecutorName specifies the name of the executor handling the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ExecutorType": {
                    "description": "ExecutorType specifies the type of the executor handling the task.",
                    "type": "string"
                },
                "ExtraObject": {
                    "description": "ExtraObject specifies additional object data associated with the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "IsPrivate": {
                    "description": "IsPrivate indicates whether the task is private.",
                    "type": "boolean"
                },
                "JwtLifeTimeSeconds": {
                    "description": "JwtLifeTimeSeconds specifies the JWT lifetime in seconds.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "LastExecutionStartTime": {
                    "description": "LastExecutionStartTime specifies the start time of the last execution of the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "LastFailedExecutionTime": {
                    "description": "LastFailedExecutionTime specifies the time of the last failed execution of the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "LastSuccesufulExecutionTime": {
                    "description": "LastSuccesufulExecutionTime specifies the time of the last successful execution of the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "MicroserviceAddress": {
                    "description": "MicroserviceAddress specifies the address of the microservice associated with the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "ModelID": {
                    "description": "ModelID represents the identifier of the model associated with the task.",
                    "type": "string"
                },
                "ModelType": {
                    "description": "ModelType specifies the type of the model associated with the task.",
                    "type": "string"
                },
                "ModuleFilter": {
                    "description": "ModuleFilter specifies the module filter for the task.",
                    "type": "string"
                },
                "ModuleGuid": {
                    "description": "ModuleGUID specifies the GUID of the module associated with the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "Name": {
                    "description": "Name specifies the name of the task.",
                    "type": "string"
                },
                "NextPlannedTime": {
                    "description": "NextPlannedTime specifies the next planned execution time for the task.",
                    "type": "string"
                },
                "OperationType": {
                    "description": "OperationType specifies the type of operation the task performs.",
                    "type": "string"
                },
                "OwnerName": {
                    "description": "OwnerName specifies the name of the owner associated with the task.",
                    "type": "string"
                },
                "OwnerType": {
                    "description": "OwnerType specifies the type of the owner associated with the task.",
                    "type": "string"
                },
                "RemoteInterfaceName": {
                    "description": "RemoteInterfaceName specifies the remote interface name for the task.",
                    "type": "string"
                },
                "RemoteMethodName": {
                    "description": "RemoteMethodName specifies the remote method name for the task.",
                    "type": "string"
                },
                "Result": {
                    "description": "Result specifies the result of the task execution.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "RunForAllTenants": {
                    "description": "RunForAllTenants indicates whether the task runs for all tenants.",
                    "type": "boolean"
                },
                "ScheduleConfig": {
                    "description": "ScheduleConfig specifies the schedule configuration for the task.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_davudpasha.ScheduleConfig"
                        }
                    ]
                },
                "TaskID": {
                    "description": "TaskID represents the identifier of the task.",
                    "type": "string"
                },
                "TaskRunID": {
                    "description": "TaskRunID represents the identifier of the task run.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString"
                        }
                    ]
                },
                "TenantID": {
                    "description": "TenantID represents the identifier of the tenant associated with the task.",
                    "type": "string"
                }
            }
        },
        "github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableInt64": {
            "type": "object"
        },
        "github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-api_davudpasha_MitreTag": {
            "type": "object"
        },
        "github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-api_davudpasha_SelectedColumn": {
            "type": "object"
        },
        "github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-int64": {
            "type": "object"
        },
        "github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableList-string": {
            "type": "object"
        },
        "github_com_mtnmunuklu_davudpasha-api-client-go_api_common.NullableString": {
            "type": "object"
        },
        "github_com_mtnmunuklu_davudpasha-api-client-go_api_common.Optional": {
            "type": "object"
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:5000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Davudpasha API",
	Description:      "Davudpasha API to demonstrate OpenAPI documentation for client-go",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
